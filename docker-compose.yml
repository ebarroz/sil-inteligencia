version: '3.8'
services:
  # Banco de Dados PostgreSQL com TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: sil-postgres-manus
    environment:
      POSTGRES_DB: sil_centro_inteligencia
      POSTGRES_USER: administrador
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./backups:/backups
    networks:
      - sil-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U administrador -d sil_centro_inteligencia"]
      interval: 10s
      timeout: 5s
      retries: 5
  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: sil-redis-manus
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - sil-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--auth", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  # Interface Web pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: sil-pgadmin-manus
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - sil-network
    depends_on:
      - postgres
    restart: unless-stopped
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  pgadmin-data:
    driver: local
networks:
  sil-network:
    driver: bridge
    name: sil-network-manus
